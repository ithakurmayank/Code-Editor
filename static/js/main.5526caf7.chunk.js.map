{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","_useState","useState","_useState2","_slicedToArray","open","setOpen","React","createElement","className","concat","type","onClick","prevOpen","FontAwesomeIcon","icon","faCompressAlt","faExpandAlt","ControlledEditor","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","_useLocalStorage","_useLocalStorage2","html","setHtml","_useLocalStorage3","_useLocalStorage4","css","setCss","_useLocalStorage5","_useLocalStorage6","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","Fragment","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAUe,SAASA,EAAOC,GAC3B,IAAQC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,YAAaC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SACtCC,EAAwBC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAMpB,OACII,IAAAC,cAAA,OAAKC,UAAS,oBAAAC,OAAsBL,EAAO,GAAK,cAC5CE,IAAAC,cAAA,OAAKC,UAAU,gBACVX,EACDS,IAAAC,cAAA,UACIG,KAAK,SACLF,UAAU,sBACVG,QAAS,kBAAMN,GAAQ,SAACO,GAAQ,OAAMA,OAEtCN,IAAAC,cAACM,IAAe,CACZC,KAAMV,EAAOW,IAAgBC,QAIzCV,IAAAC,cAACU,aAAgB,CACbC,eAnBZ,SAAsBC,EAAQC,EAAMtB,GAChCC,EAASD,IAmBDA,MAAOA,EACPU,UAAU,sBACVa,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAM5B,EACN6B,MAAO,WACPC,aAAa,MCrClB,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAHK,iBAGkBF,EAE7B5B,EAA0BC,oBAAS,WAC/B,IAAM8B,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACAA,IAEAA,KAEb3B,EAAAC,YAAAH,EAAA,GATKF,EAAKI,EAAA,GAAEkC,EAAQlC,EAAA,GAetB,OAJAmC,qBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUzC,MAClD,CAACgC,EAAahC,IAEV,CAACA,EAAOsC,GCsCJI,MAxDf,WACE,IAAAC,EAAwBd,EAAgB,OAAQ,IAAGe,EAAAvC,YAAAsC,EAAA,GAA5CE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAAsBlB,EAAgB,MAAO,IAAGmB,EAAA3C,YAAA0C,EAAA,GAAzCE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAClBG,EAAoBtB,EAAgB,KAAM,IAAGuB,EAAA/C,YAAA8C,EAAA,GAAtCE,EAAED,EAAA,GAAEE,EAAKF,EAAA,GAChBlD,EAA4BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAjCqD,EAAMnD,EAAA,GAAEoD,EAASpD,EAAA,GAgBxB,OAdAmC,qBAAU,WACR,IAAMkB,EAAUC,YAAW,WACzBF,EAAU,qCAAD7C,OAEGkC,EAAI,8BAAAlC,OACHsC,EAAG,gCAAAtC,OACF0C,EAAE,0CAGf,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACZ,EAAMI,EAAKI,IAGb7C,IAAAC,cAAAD,IAAAoD,SAAA,KACEpD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAACb,EAAM,CACLE,SAAS,MACTC,YAAY,OACZC,MAAO6C,EACP5C,SAAU6C,IAEZtC,IAAAC,cAACb,EAAM,CACLE,SAAS,MACTC,YAAY,MACZC,MAAOiD,EACPhD,SAAUiD,IAEZ1C,IAAAC,cAACb,EAAM,CACLE,SAAS,aACTC,YAAY,KACZC,MAAOqD,EACPpD,SAAUqD,KAGd9C,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,UACE8C,OAAQA,EACRM,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YChDjBC,IAASC,OACL3D,IAAAC,cAACD,IAAM4D,WAAU,KACb5D,IAAAC,cAACiC,EAAG,OAER2B,SAASC,eAAe,W","file":"static/js/main.5526caf7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Editor(props) {\r\n    const { language, displayName, value, onChange } = props;\r\n    const [open, setOpen] = useState(true);\r\n\r\n    function handleChange(editor, data, value) {\r\n        onChange(value);\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"expand-collapse-btn\"\r\n                    onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        icon={open ? faCompressAlt : faExpandAlt}\r\n                    />\r\n                </button>\r\n            </div>\r\n            <ControlledEditor\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    theme: \"material\",\r\n                    lineNumbers: true,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst PREFIX = \"codepen-clone-\";\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const prefixedKey = PREFIX + key;\r\n\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey);\r\n        if (jsonValue != null) return JSON.parse(jsonValue);\r\n\r\n        if (typeof initialValue === \"function\") {\r\n            return initialValue();\r\n        } else {\r\n            return initialValue;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value));\r\n    }, [prefixedKey, value]);\r\n\r\n    return [value, setValue];\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Editor from './Editor'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\n\r\nfunction App() {\r\n  const [html, setHtml] = useLocalStorage('html', '')\r\n  const [css, setCss] = useLocalStorage('css', '')\r\n  const [js, setJs] = useLocalStorage('js', '')\r\n  const [srcDoc, setSrcDoc] = useState('')\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setSrcDoc(`\r\n        <html>\r\n          <body>${html}</body>\r\n          <style>${css}</style>\r\n          <script>${js}</script>\r\n        </html>\r\n      `)\r\n    }, 250)\r\n\r\n    return () => clearTimeout(timeout)\r\n  }, [html, css, js])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pane top-pane\">\r\n        <Editor\r\n          language=\"xml\"\r\n          displayName=\"HTML\"\r\n          value={html}\r\n          onChange={setHtml}\r\n        />\r\n        <Editor\r\n          language=\"css\"\r\n          displayName=\"CSS\"\r\n          value={css}\r\n          onChange={setCss}\r\n        />\r\n        <Editor\r\n          language=\"javascript\"\r\n          displayName=\"JS\"\r\n          value={js}\r\n          onChange={setJs}\r\n        />\r\n      </div>\r\n      <div className=\"pane\">\r\n        <iframe\r\n          srcDoc={srcDoc}\r\n          title=\"output\"\r\n          sandbox=\"allow-scripts\"\r\n          frameBorder=\"0\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}